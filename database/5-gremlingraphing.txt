schema.propertyKey('pname').Text().ifNotExists().create()
schema.propertyKey('catname').Text().ifNotExists().create()
schema.propertyKey('charname').Text().ifNotExists().create()
schema.propertyKey('bname').Text().ifNotExists().create()
schema.propertyKey('sname').Text().ifNotExists().create()
schema.propertyKey('ordertime').Timestamp().ifNotExists().create()
schema.propertyKey('price').Int().ifNotExists().create()

schema.vertexLabel('product').properties('pname', 'price', 'ordertime').ifNotExists().create()
schema.vertexLabel('charity').properties('charname').ifNotExists().create()
schema.vertexLabel('category').properties('catname').ifNotExists().create()
schema.vertexLabel('state').properties('sname').ifNotExists().create()
schema.vertexLabel('buyer').properties('bname').ifNotExists().create()

schema.edgeLabel('donated').connection('product', 'charity').ifNotExists().create()
schema.edgeLabel('of-type').connection('product', 'category').ifNotExists().create()
schema.edgeLabel('resides-in').connection('buyer', 'state').ifNotExists().create()
schema.edgeLabel('bought').connection('buyer', 'product').ifNotExists().create()

schema.vertexLabel('product').index('productByPname').materialized().by('pname').ifNotExists().add()
schema.vertexLabel('category').index('categoryByCatname').materialized().by('catname').ifNotExists().add()
schema.vertexLabel('charity').index('charityByCharname').materialized().by('charname').ifNotExists().add()
schema.vertexLabel('buyer').index('buyerByBname').materialized().by('bname').ifNotExists().add()
schema.vertexLabel('state').index('StateBySname').materialized().by('sname').ifNotExists().add()

Apparel = graph.addVertex(T.label, 'category', 'catname', 'Apparel')
Furniture = graph.addVertex(T.label, 'category', 'catname', 'Furniture')
Gaming = graph.addVertex(T.label, 'category', 'catname', 'Gaming')
Homewares = graph.addVertex(T.label, 'category', 'catname', 'Homewares')
Prop = graph.addVertex(T.label, 'category', 'catname', 'Prop')
Toy = graph.addVertex(T.label, 'category', 'catname', 'Toy')

Blue_Cross_Foundation = graph.addVertex(T.label, 'charity', 'charname', 'Blue_Cross_Foundation')
Cancer_Research_Foundation = graph.addVertex(T.label, 'charity', 'charname', 'Cancer_Research_Foundation')
Rockstar_Drug_Rehabilitation_Centre = graph.addVertex(T.label, 'charity', 'charname', 'Rockstar_Drug_Rehabilitation_Centre')
Doctors_With_Borders = graph.addVertex(T.label, 'charity', 'charname', 'Doctors_With_Borders')
Supervillian_Victims_Fund = graph.addVertex(T.label, 'charity', 'charname', 'Supervillian_Victims_Fund')

ACT = graph.addVertex(T.label, 'state', 'sname', 'ACT')
QLD = graph.addVertex(T.label, 'state', 'sname', 'QLD')
NSW = graph.addVertex(T.label, 'state', 'sname', 'NSW')
NT = graph.addVertex(T.label, 'state', 'sname', 'NT')
TAS = graph.addVertex(T.label, 'state', 'sname', 'TAS')
VIC = graph.addVertex(T.label, 'state', 'sname', 'VIC')
WA = graph.addVertex(T.label, 'state', 'sname', 'WA')


Air_Jordans = graph.addVertex(T.label, 'product', 'pname', 'Air_Jordans', 'price', 200)
Hamilton_Best = graph.addVertex(T.label, 'buyer', 'bname', 'Hamilton_Best' )
Air_Jordans.addEdge('donated', Blue_Cross_Foundation)
Air_Jordans.addEdge('of-type', Apparel)
Hamilton_Best.addEdge('resides-in', QLD)
Hamilton_Best.addEdge('bought', Air_Jordans)

Nintendo_Wii_U = graph.addVertex(T.label, 'product', 'pname', 'Nintendo_Wii_U', 'price', 180)
Cairne_Bloodhoof = graph.addVertex(T.label, 'buyer', 'bname', 'Cairne_Bloodhoof' )
Nintendo_Wii_U.addEdge('donated', Doctors_With_Borders)
Nintendo_Wii_U.addEdge('of-type', Gaming)
Cairne_Bloodhoof.addEdge('resides-in', WA)
Cairne_Bloodhoof.addEdge('bought', Nintendo_Wii_U)

Apple_Watch_5 = graph.addVertex(T.label, 'product', 'pname', 'Apple_Watch_5', 'price', 330)
Daquan_Dale = graph.addVertex(T.label, 'buyer', 'bname', 'Daquan_Dale' )
Apple_Watch_5.addEdge('donated', Supervillian_Victims_Fund)
Apple_Watch_5.addEdge('of-type', Apparel)
Daquan_Dale.addEdge('resides-in', NSW)
Daquan_Dale.addEdge('bought', Apple_Watch_5)

Vintage_Nintenod_Gameboy = graph.addVertex(T.label, 'product', 'pname', 'Vintage_Nintenod_Gameboy', 'price', 150)
Kiona_Armstrong = graph.addVertex(T.label, 'buyer', 'bname', 'Kiona_Armstrong' )
Vintage_Nintenod_Gameboy.addEdge('donated', Rockstar_Drug_Rehabilitation_Centre)
Vintage_Nintenod_Gameboy.addEdge('of-type', Gaming)
Kiona_Armstrong.addEdge('resides-in', QLD)
Kiona_Armstrong.addEdge('bought', Vintage_Nintenod_Gameboy)

Kansas_City_Chiefs_Patrick_Mahomes_Jersey = graph.addVertex(T.label, 'product', 'pname', 'Kansas_City_Chiefs_Patrick_Mahomes_Jersey', 'price', 45)
Kibo_Gilliam = graph.addVertex(T.label, 'buyer', 'bname', 'Kibo_Gilliam' )
Kansas_City_Chiefs_Patrick_Mahomes_Jersey.addEdge('donated', Cancer_Research_Foundation)
Kansas_City_Chiefs_Patrick_Mahomes_Jersey.addEdge('of-type', Apparel)
Kibo_Gilliam.addEdge('resides-in', TAS)
Kibo_Gilliam.addEdge('bought', Kansas_City_Chiefs_Patrick_Mahomes_Jersey)

Marvels_Avengers_Thor_Hammer = graph.addVertex(T.label, 'product', 'pname', 'Marvels_Avengers_Thor_Hammer', 'price', 30)
Jin_Kelley = graph.addVertex(T.label, 'buyer', 'bname', 'Jin_Kelley' )
Marvels_Avengers_Thor_Hammer.addEdge('donated', Doctors_With_Borders)
Marvels_Avengers_Thor_Hammer.addEdge('of-type', Prop)
Jin_Kelley.addEdge('resides-in', NSW)
Jin_Kelley.addEdge('bought', Marvels_Avengers_Thor_Hammer)

Predator_Latex_Adult_Mask = graph.addVertex(T.label, 'product', 'pname', 'Predator_Latex_Adult_Mask', 'price', 20)
Cadman_Vega = graph.addVertex(T.label, 'buyer', 'bname', 'Cadman_Vega' )
Predator_Latex_Adult_Mask.addEdge('donated', Supervillian_Victims_Fund)
Predator_Latex_Adult_Mask.addEdge('of-type', Prop)
Cadman_Vega.addEdge('resides-in', NSW)
Cadman_Vega.addEdge('bought', Predator_Latex_Adult_Mask)

Barbie_DreamCamper = graph.addVertex(T.label, 'product', 'pname', 'Barbie_DreamCamper', 'price', 50)
Taylor_Robertson = graph.addVertex(T.label, 'buyer', 'bname', 'Taylor_Robertson' )
Barbie_DreamCamper.addEdge('donated', Supervillian_Victims_Fund)
Barbie_DreamCamper.addEdge('of-type', Toy)
Taylor_Robertson.addEdge('resides-in', VIC)
Taylor_Robertson.addEdge('bought', Barbie_DreamCamper)

Pierre_Paulin_Tulip_chair = graph.addVertex(T.label, 'product', 'pname', 'Pierre_Paulin_Tulip_chair', 'price', 300)
Irene_Decker = graph.addVertex(T.label, 'buyer', 'bname', 'Irene_Decker' )
Pierre_Paulin_Tulip_chair.addEdge('donated', Rockstar_Drug_Rehabilitation_Centre)
Pierre_Paulin_Tulip_chair.addEdge('of-type', Toy)
Irene_Decker.addEdge('resides-in', NT)
Irene_Decker.addEdge('bought', Pierre_Paulin_Tulip_chair)

FIFA_19_PS4 = graph.addVertex(T.label, 'product', 'pname', 'FIFA_19_PS4', 'price', 50)
Kiona_Calhoun = graph.addVertex(T.label, 'buyer', 'bname', 'Kiona_Calhoun' )
FIFA_19_PS4.addEdge('donated', Supervillian_Victims_Fund)
FIFA_19_PS4.addEdge('of-type', Gaming)
Kiona_Calhoun.addEdge('resides-in', NSW)
Kiona_Calhoun.addEdge('bought', FIFA_19_PS4)

Retro_vintage_armchair = graph.addVertex(T.label, 'product', 'pname', 'Retro_vintage_armchair', 'price', 125)
Lee_Waller = graph.addVertex(T.label, 'buyer', 'bname', 'Lee_Waller' )
Retro_vintage_armchair.addEdge('donated', Supervillian_Victims_Fund)
Retro_vintage_armchair.addEdge('of-type', Furniture)
Lee_Waller.addEdge('resides-in', VIC)
Lee_Waller.addEdge('bought', Retro_vintage_armchair)

Industrial_Round_Table = graph.addVertex(T.label, 'product', 'pname', 'Industrial_Round_Table', 'price', 85)
Charity_Boyer = graph.addVertex(T.label, 'buyer', 'bname', 'Charity_Boyer' )
Industrial_Round_Table.addEdge('donated', Doctors_With_Borders)
Industrial_Round_Table.addEdge('of-type', Furniture)
Charity_Boyer.addEdge('resides-in', VIC)
Charity_Boyer.addEdge('bought', Industrial_Round_Table)

Patriot_Apparel_Wildland_Wild_Fire_Thin_Red_Line_Firefighter_T_Shirt = graph.addVertex(T.label, 'product', 'pname', 'Patriot_Apparel_Wildland_Wild_Fire_Thin_Red_Line_Firefighter_T_Shirt', 'price', 85)
Kiona_Armstrong = graph.addVertex(T.label, 'buyer', 'bname', 'Kiona_Armstrong' )
Patriot_Apparel_Wildland_Wild_Fire_Thin_Red_Line_Firefighter_T_Shirt.addEdge('donated', Blue_Cross_Foundation)
Patriot_Apparel_Wildland_Wild_Fire_Thin_Red_Line_Firefighter_T_Shirt.addEdge('of-type', Apparel)
Kiona_Armstrong.addEdge('resides-in', QLD)
Kiona_Armstrong.addEdge('bought', Patriot_Apparel_Wildland_Wild_Fire_Thin_Red_Line_Firefighter_T_Shirt)

Coffee_table = graph.addVertex(T.label, 'product', 'pname', 'Coffee_table', 'price', 210)
Patricia_Velazquez = graph.addVertex(T.label, 'buyer', 'bname', 'Patricia_Velazquez' )
Coffee_table.addEdge('donated', Supervillian_Victims_Fund)
Coffee_table.addEdge('of-type', Furniture)
Patricia_Velazquez.addEdge('resides-in', QLD)
Patricia_Velazquez.addEdge('bought', Coffee_table)

Baby_walker_toy = graph.addVertex(T.label, 'product', 'pname', 'Baby_walker_toy', 'price', 15)
Alice_Mcdowell = graph.addVertex(T.label, 'buyer', 'bname', 'Alice_Mcdowell' )
Baby_walker_toy.addEdge('donated', Cancer_Research_Foundation)
Baby_walker_toy.addEdge('of-type',Toy)
Alice_Mcdowell.addEdge('resides-in', WA)
Alice_Mcdowell.addEdge('bought', Baby_walker_toy)

VTech_car_Make_sounds = graph.addVertex(T.label, 'product', 'pname', 'VTech_car_Make_sounds', 'price', 15)
Basil_Tyson = graph.addVertex(T.label, 'buyer', 'bname', 'Basil_Tyson' )
VTech_car_Make_sounds.addEdge('donated', Blue_Cross_Foundation)
VTech_car_Make_sounds.addEdge('of-type', Toy)
Basil_Tyson.addEdge('resides-in', NSW)
Basil_Tyson.addEdge('bought', VTech_car_Make_sounds)

Mega_LEGO_Hello_Kitty_Farm_Set = graph.addVertex(T.label, 'product', 'pname', 'Mega_LEGO_Hello_Kitty_Farm_Set', 'price', 15)
Reese_Yates = graph.addVertex(T.label, 'buyer', 'bname', 'Reese_Yates' )
Mega_LEGO_Hello_Kitty_Farm_Set.addEdge('donated', Blue_Cross_Foundation)
Mega_LEGO_Hello_Kitty_Farm_Set.addEdge('of-type', Toy)
Reese_Yates.addEdge('resides-in', NSW)
Reese_Yates.addEdge('bought', Mega_LEGO_Hello_Kitty_Farm_Set)

Scales_Industrial_Farmhouse = graph.addVertex(T.label, 'product', 'pname', 'Scales_Industrial_Farmhouse', 'price', 10)
Igor_Johnson = graph.addVertex(T.label, 'buyer', 'bname', 'Igor_Johnson' )
Scales_Industrial_Farmhouse.addEdge('donated', Supervillian_Victims_Fund)
Scales_Industrial_Farmhouse.addEdge('of-type', Homewares)
Igor_Johnson.addEdge('resides-in', VIC)
Igor_Johnson.addEdge('bought', Scales_Industrial_Farmhouse)

Two_x_Early_Settler_White_Vases = graph.addVertex(T.label, 'product', 'pname', 'Two_x_Early_Settler_White_Vases', 'price', 15)
Asher_Moss = graph.addVertex(T.label, 'buyer', 'bname', 'Asher_Moss' )
Two_x_Early_Settler_White_Vases.addEdge('donated', Blue_Cross_Foundation)
Two_x_Early_Settler_White_Vases.addEdge('of-type', Homewares)
Asher_Moss.addEdge('resides-in', NSW)
Asher_Moss.addEdge('bought', Two_x_Early_Settler_White_Vases)

Fleur_Tree_w_Colour_Birds_Wall_Hanging = graph.addVertex(T.label, 'product', 'pname', 'Fleur_Tree_w_Colour_Birds_Wall_Hanging', 'price', 69)
Keefe_Buchanan = graph.addVertex(T.label, 'buyer', 'bname', 'Keefe_Buchanan' )
Fleur_Tree_w_Colour_Birds_Wall_Hanging.addEdge('donated', Doctors_With_Borders)
Fleur_Tree_w_Colour_Birds_Wall_Hanging.addEdge('of-type', Homewares)
Keefe_Buchanan.addEdge('resides-in', VIC)
Keefe_Buchanan.addEdge('bought', Fleur_Tree_w_Colour_Birds_Wall_Hanging)

// Set up graph config for later
schema.config().option('graph.schema_mode').set('Development')